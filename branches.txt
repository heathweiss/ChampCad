-can: git reset --hard HEAD 
 or   
      git reset --hard 'can create gpoints from points'

master/gmsh:



done:
The  GMESH.Points.NonOverLappedClosedPoints newtype should go back to being a NonOverLappedClosedPoints [Pts]
instead of a [NonOverLappedClosedPoints], as it is a state of a list, rather than a list of states.
commit -m 'back to NonOverLappedClosedPoints [Pts]'
pushed to gmsh


next:
Create a GADT that uses NonOverLappedClosed<Points/GPoints/...> so I can pass along the NonOverLappedClosed State.


next:
rename GMSH.Lines.Line to Curves, to match how gmsh the group of related items such as Line, Circle, Bezier ..., which share a common Id system and can be used
within Curve Loop.
Should also rename in BulderStateData for their id.


next:
Create GPoints which contain a GPointId, and a set of (GADT?) constructors to indicate what they are.
eg: End points for a gmsh Line. Control point for a gmsh Circle.
Have a set of fx's that can convert the CPts.Pts into the target GPoint type.
Could then have a [GPoint] such as [EndPoint, EndpPoint, CircleCenter, EndPoint, EndPoint].
This would create a Line, Circle, Line. when converted to a Curve Loop.




next:
Figure out a folder name to contain all the gmesh modules aready not in something like Builder or Writer

next:
Refer to https://gist.github.com/seanhess/b17d4e3da88080c35542 on combing a ReaderT ExceptT to figure out how to better use the scanner db.



